{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avigill\\\\Desktop\\\\Work\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var timeStamp = _ref.timeStamp;\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, count), timeStamp.map(function (t) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, \"t\");\n  }));\n};\n\n_s(Index, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data, xValue, key;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\n\n        case 2:\n          res = _context.sent;\n          //console.log(res);\n          data = res.data;\n          xValue = [];\n\n          for (key in data['Time Series (15min)']) {\n            xValue.push(key);\n          }\n\n          return _context.abrupt(\"return\", {\n            timeStamp: xValue\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/avigill/Desktop/Work/pages/index.js"],"names":["React","useState","axios","Index","timeStamp","count","setCount","map","t","getInitialProps","get","res","data","xValue","key","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAiB;AAAA;;AAAA,MAAfC,SAAe,QAAfA,SAAe;;AAAA,kBACFH,QAAQ,CAAC,CAAD,CADN;AAAA,MACpBI,KADoB;AAAA,MACdC,QADc;;AAE3B,SACI,4BACJ;AAAI,IAAA,OAAO,EAAG;AAAA,aAAMA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,KAA1C,CADI,EAECD,SAAS,CAACG,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADY;AAAA,GAAf,CAFD,CADJ;AAQH,CAVD;;GAAML,K;;KAAAA,K;AAWNA,KAAK,CAACM,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRP,KAAK,CAACQ,GAAN,CAAU,mHAAV,CADQ;;AAAA;AACpBC,UAAAA,GADoB;AAExB;AACMC,UAAAA,IAHkB,GAGXD,GAAG,CAACC,IAHO;AAIpBC,UAAAA,MAJoB,GAIZ,EAJY;;AAKxB,eAAQC,GAAR,IAAeF,IAAI,CAAC,qBAAD,CAAnB,EAA2C;AACvCC,YAAAA,MAAM,CAACE,IAAP,CAAYD,GAAZ;AACH;;AAPuB,2CASjB;AAACV,YAAAA,SAAS,EAAES;AAAZ,WATiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeV,KAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst Index = ({timeStamp}) => {\r\n    const [count,setCount] = useState(0);\r\n    return (\r\n        <>\r\n    <h1 onClick= {() => setCount(count + 1)}>{count}</h1>\r\n        {timeStamp.map(t =>\r\n            <p>t</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\nIndex.getInitialProps = async () => {\r\nlet res = await axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\r\n//console.log(res);\r\nconst data = res.data\r\nlet xValue =[];\r\nfor(let key in data['Time Series (15min)']){\r\n    xValue.push(key)\r\n}\r\n\r\nreturn {timeStamp: xValue};\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}