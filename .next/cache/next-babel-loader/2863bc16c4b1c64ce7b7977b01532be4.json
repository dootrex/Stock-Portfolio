{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avigill\\\\Desktop\\\\Work\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport Chart from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nconst Index = ({\n  posts,\n  price\n}) => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const data = {\n    label: 'IBM',\n    datasets: [{\n      label: \"cost\",\n      data: price,\n      backgroundColor: rgba(12, 3232, 23, 0.9)\n    }]\n  };\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, count), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"  \", posts.map(post => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, post))), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"  \", price.map(post => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, post))), __jsx(Bar, {\n    data: data,\n    options: {\n      maintainAspectRatio: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n};\n\nIndex.getInitialProps = async () => {\n  let res = await axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\"); //console.log(res);\n\n  const data = res.data;\n  let xValue = [];\n  let yValue = [];\n\n  for (let key in data['Time Series (15min)']) {\n    xValue.push(key);\n    yValue.push(data['Time Series (15min)'][key]['4. close']);\n  }\n\n  return {\n    posts: xValue,\n    price: yValue\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/avigill/Desktop/Work/pages/index.js"],"names":["React","useState","axios","Chart","Bar","Index","posts","price","count","setCount","data","label","datasets","backgroundColor","rgba","map","post","maintainAspectRatio","getInitialProps","res","get","xValue","yValue","key","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAAmB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAmBR,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAMS,IAAI,GAAG;AAACC,IAAAA,KAAK,EAAE,KAAR;AACCC,IAAAA,QAAQ,EAAE,CAAC;AACPD,MAAAA,KAAK,EAAE,MADA;AAEPD,MAAAA,IAAI,EAACH,KAFE;AAGPM,MAAAA,eAAe,EAAEC,IAAI,CAAC,EAAD,EAAI,IAAJ,EAAS,EAAT,EAAY,GAAZ;AAHd,KAAD;AADX,GAAb;AAMA,SACI,4BACJ;AAAI,IAAA,OAAO,EAAG,MAAML,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,KAA1C,CADI,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,KAAK,CAACS,GAAN,CAAUC,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADH,CAAP,CAFF,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOT,KAAK,CAACQ,GAAN,CAAUC,IAAI,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADD,CAAP,CANJ,EAUI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEN,IAAX;AAAiB,IAAA,OAAO,EAAE;AACtBO,MAAAA,mBAAmB,EAAC;AADE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAgBH,CAxBD;;AAyBAZ,KAAK,CAACa,eAAN,GAAwB,YAAY;AACpC,MAAIC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,mHAAV,CAAhB,CADoC,CAEpC;;AACA,QAAMV,IAAI,GAAGS,GAAG,CAACT,IAAjB;AACA,MAAIW,MAAM,GAAE,EAAZ;AACA,MAAIC,MAAM,GAAE,EAAZ;;AACA,OAAI,IAAIC,GAAR,IAAeb,IAAI,CAAC,qBAAD,CAAnB,EAA2C;AACvCW,IAAAA,MAAM,CAACG,IAAP,CAAYD,GAAZ;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAYd,IAAI,CAAC,qBAAD,CAAJ,CAA4Ba,GAA5B,EAAiC,UAAjC,CAAZ;AACH;;AAED,SAAO;AAACjB,IAAAA,KAAK,EAAEe,MAAR;AAAgBd,IAAAA,KAAK,EAAEe;AAAvB,GAAP;AACC,CAZD;;AAaA,eAAejB,KAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Chart from 'chart.js';\r\nimport {Bar} from 'react-chartjs-2';\r\nconst Index = ({posts,price}) => {\r\n    const [count,setCount] = useState(0);\r\n    const data = {label: 'IBM',\r\n                  datasets: [{\r\n                      label: \"cost\",\r\n                      data:price,\r\n                      backgroundColor: rgba(12,3232,23,0.9)\r\n                  }]  };\r\n    return (\r\n        <>\r\n    <h1 onClick= {() => setCount(count + 1)}>{count}</h1>\r\n          <ul>  {posts.map(post =>\r\n                    <li>{post}</li>\r\n                )}\r\n            </ul>\r\n            <ul>  {price.map(post =>\r\n                    <li>{post}</li>\r\n                )}\r\n            </ul>\r\n            <Bar data={data} options={{\r\n                maintainAspectRatio:false\r\n            }}/>\r\n        </>\r\n    )\r\n}\r\nIndex.getInitialProps = async () => {\r\nlet res = await axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\r\n//console.log(res);\r\nconst data = res.data\r\nlet xValue =[];\r\nlet yValue =[];\r\nfor(let key in data['Time Series (15min)']){\r\n    xValue.push(key);\r\n    yValue.push(data['Time Series (15min)'][key]['4. close']);\r\n}\r\n\r\nreturn {posts: xValue, price: yValue};\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}