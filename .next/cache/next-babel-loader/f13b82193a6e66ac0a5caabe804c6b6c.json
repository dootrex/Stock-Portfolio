{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avigill\\\\Desktop\\\\Work\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var posts = _ref.posts,\n      price = _ref.price;\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var createData = function createData() {\n    var arr = [];\n\n    for (var i = 0; i < posts.length; i++) {\n      var uiui = {\n        x: posts[i],\n        y: price[i]\n      };\n      arr.push(uiui);\n    }\n\n    return arr;\n  };\n\n  var datas = [{\n    id: \"IBM\",\n    data: createData()\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, count), __jsx(\"div\", {\n    style: {\n      height: 500,\n      width: 500\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(ResponsiveLine, {\n    data: datas,\n    width: 400,\n    height: 400,\n    colors: {\n      scheme: \"nivo\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Index, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data, xValue, yValue, key;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\n\n        case 2:\n          res = _context.sent;\n          //console.log(res);\n          data = res.data;\n          xValue = [];\n          yValue = [];\n\n          for (key in data[\"Time Series (15min)\"]) {\n            xValue.push(key);\n            yValue.push(data[\"Time Series (15min)\"][key][\"4. close\"]);\n          }\n\n          return _context.abrupt(\"return\", {\n            posts: xValue,\n            price: yValue\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/avigill/Desktop/Work/pages/index.js"],"names":["React","useState","axios","ResponsiveLine","Index","posts","price","count","setCount","createData","arr","i","length","uiui","x","y","push","datas","id","data","height","width","scheme","getInitialProps","get","res","xValue","yValue","key"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA;;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACRL,QAAQ,CAAC,CAAD,CADA;AAAA,MAC3BM,KAD2B;AAAA,MACpBC,QADoB;;AAElC,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,IAAI,GAAG;AAAEC,QAAAA,CAAC,EAAET,KAAK,CAACM,CAAD,CAAV;AAAeI,QAAAA,CAAC,EAAET,KAAK,CAACK,CAAD;AAAvB,OAAX;AACAD,MAAAA,GAAG,CAACM,IAAJ,CAASH,IAAT;AACD;;AACD,WAAOH,GAAP;AACD,GAPD;;AAQA,MAAIO,KAAK,GAAG,CACV;AACEC,IAAAA,EAAE,EAAE,KADN;AAEEC,IAAAA,IAAI,EAAEV,UAAU;AAFlB,GADU,CAAZ;AAMA,SACE,4BACE;AAAI,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,KAAzC,CADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,IAAI,EAAEJ,KADR;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,MAAM,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAaD,CA7BD;;GAAMlB,K;;KAAAA,K;AA8BNA,KAAK,CAACmB,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNrB,KAAK,CAACsB,GAAN,CACd,mHADc,CADM;;AAAA;AAClBC,UAAAA,GADkB;AAItB;AACMN,UAAAA,IALgB,GAKTM,GAAG,CAACN,IALK;AAMlBO,UAAAA,MANkB,GAMT,EANS;AAOlBC,UAAAA,MAPkB,GAOT,EAPS;;AAQtB,eAASC,GAAT,IAAgBT,IAAI,CAAC,qBAAD,CAApB,EAA6C;AAC3CO,YAAAA,MAAM,CAACV,IAAP,CAAYY,GAAZ;AACAD,YAAAA,MAAM,CAACX,IAAP,CAAYG,IAAI,CAAC,qBAAD,CAAJ,CAA4BS,GAA5B,EAAiC,UAAjC,CAAZ;AACD;;AAXqB,2CAaf;AAAEvB,YAAAA,KAAK,EAAEqB,MAAT;AAAiBpB,YAAAA,KAAK,EAAEqB;AAAxB,WAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAeA,eAAevB,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nconst Index = ({ posts, price }) => {\r\n  const [count, setCount] = useState(0);\r\n  const createData = () => {\r\n    let arr = [];\r\n    for (let i = 0; i < posts.length; i++) {\r\n      let uiui = { x: posts[i], y: price[i] };\r\n      arr.push(uiui);\r\n    }\r\n    return arr;\r\n  };\r\n  let datas = [\r\n    {\r\n      id: \"IBM\",\r\n      data: createData(),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <h1 onClick={() => setCount(count + 1)}>{count}</h1>\r\n      <div style={{ height: 500, width: 500 }}>\r\n        <ResponsiveLine\r\n          data={datas}\r\n          width={400}\r\n          height={400}\r\n          colors={{ scheme: \"nivo\" }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nIndex.getInitialProps = async () => {\r\n  let res = await axios.get(\r\n    \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\"\r\n  );\r\n  //console.log(res);\r\n  const data = res.data;\r\n  let xValue = [];\r\n  let yValue = [];\r\n  for (let key in data[\"Time Series (15min)\"]) {\r\n    xValue.push(key);\r\n    yValue.push(data[\"Time Series (15min)\"][key][\"4. close\"]);\r\n  }\r\n\r\n  return { posts: xValue, price: yValue };\r\n};\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}