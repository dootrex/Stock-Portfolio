{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Avi\\\\Downloads\\\\Work\\\\stocky\\\\Stock-Portfolio\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport Chart from \"../components/Chart\";\nimport Link from \"next/link\";\nimport Search from '../components/Search';\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var posts = _ref.posts,\n      price = _ref.price;\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var createData = function createData() {\n    var arr = [];\n\n    for (var i = 0; i < posts.length; i++) {\n      var uiui = {\n        x: posts[i],\n        y: price[i]\n      };\n      arr.push(uiui);\n    }\n\n    return arr;\n  };\n\n  var datas = [{\n    id: \"IBM\",\n    data: createData()\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, count), __jsx(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(Link, {\n    href: \"/stock?ticker=ACB\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Welp\")));\n};\n\n_s(Index, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data, xValue, yValue, key;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=ACB&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\n\n        case 2:\n          res = _context.sent;\n          //console.log(res);\n          data = res.data;\n          xValue = [];\n          yValue = [];\n\n          for (key in data[\"Time Series (15min)\"]) {\n            xValue.push(key);\n            yValue.push(data[\"Time Series (15min)\"][key][\"4. close\"]);\n          }\n\n          return _context.abrupt(\"return\", {\n            posts: xValue,\n            price: yValue\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Avi/Downloads/Work/stocky/Stock-Portfolio/pages/index.js"],"names":["React","useState","axios","ResponsiveLine","Chart","Link","Search","Index","posts","price","count","setCount","createData","arr","i","length","uiui","x","y","push","datas","id","data","getInitialProps","get","res","xValue","yValue","key"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA;;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACRR,QAAQ,CAAC,CAAD,CADA;AAAA,MAC3BS,KAD2B;AAAA,MACpBC,QADoB;;AAElC,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,IAAI,GAAG;AAAEC,QAAAA,CAAC,EAAET,KAAK,CAACM,CAAD,CAAV;AAAeI,QAAAA,CAAC,EAAET,KAAK,CAACK,CAAD;AAAvB,OAAX;AACAD,MAAAA,GAAG,CAACM,IAAJ,CAASH,IAAT;AACD;;AACD,WAAOH,GAAP;AACD,GAPD;;AAQA,MAAIO,KAAK,GAAG,CACV;AACEC,IAAAA,EAAE,EAAE,KADN;AAEEC,IAAAA,IAAI,EAAEV,UAAU;AAFlB,GADU,CAAZ;AAMA,SACE,4BACE;AAAI,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,KAAzC,CADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,CADF;AASD,CAzBD;;GAAMH,K;;KAAAA,K;AA0BNA,KAAK,CAACgB,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNrB,KAAK,CAACsB,GAAN,CACd,mHADc,CADM;;AAAA;AAClBC,UAAAA,GADkB;AAItB;AACMH,UAAAA,IALgB,GAKTG,GAAG,CAACH,IALK;AAMlBI,UAAAA,MANkB,GAMT,EANS;AAOlBC,UAAAA,MAPkB,GAOT,EAPS;;AAQtB,eAASC,GAAT,IAAgBN,IAAI,CAAC,qBAAD,CAApB,EAA6C;AAC3CI,YAAAA,MAAM,CAACP,IAAP,CAAYS,GAAZ;AACAD,YAAAA,MAAM,CAACR,IAAP,CAAYG,IAAI,CAAC,qBAAD,CAAJ,CAA4BM,GAA5B,EAAiC,UAAjC,CAAZ;AACD;;AAXqB,2CAaf;AAAEpB,YAAAA,KAAK,EAAEkB,MAAT;AAAiBjB,YAAAA,KAAK,EAAEkB;AAAxB,WAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAeA,eAAepB,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport Chart from \"../components/Chart\";\nimport Link from \"next/link\";\nimport Search from '../components/Search';\n\nconst Index = ({ posts, price }) => {\n  const [count, setCount] = useState(0);\n  const createData = () => {\n    let arr = [];\n    for (let i = 0; i < posts.length; i++) {\n      let uiui = { x: posts[i], y: price[i] };\n      arr.push(uiui);\n    }\n    return arr;\n  };\n  let datas = [\n    {\n      id: \"IBM\",\n      data: createData(),\n    },\n  ];\n  return (\n    <>\n      <h1 onClick={() => setCount(count + 1)}>{count}</h1>\n      <Search />\n      <Link href={`/stock?ticker=ACB`}>\n        <a>Welp</a>\n      </Link>\n    </>\n  );\n};\nIndex.getInitialProps = async () => {\n  let res = await axios.get(\n    \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=ACB&interval=15min&apikey=V6PMYFQGMDIY3Y1P\"\n  );\n  //console.log(res);\n  const data = res.data;\n  let xValue = [];\n  let yValue = [];\n  for (let key in data[\"Time Series (15min)\"]) {\n    xValue.push(key);\n    yValue.push(data[\"Time Series (15min)\"][key][\"4. close\"]);\n  }\n\n  return { posts: xValue, price: yValue };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}