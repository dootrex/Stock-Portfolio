{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avigill\\\\Desktop\\\\Work\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport Chart from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var posts = _ref.posts,\n      price = _ref.price;\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var datas = {\n    label: 'IBM',\n    datasets: [{\n      data: [12, 22, 333, 22, 22],\n      backgroundColor: 'rgba(12,3232,23,0.9)'\n    }]\n  };\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, count), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"  \", posts.map(function (post) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, post);\n  })), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"  \", price.map(function (post) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, post);\n  })), __jsx(Bar, {\n    data: datas,\n    options: {\n      maintainAspectRatio: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Index, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data, xValue, yValue, key;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\n\n        case 2:\n          res = _context.sent;\n          //console.log(res);\n          data = res.data;\n          xValue = [];\n          yValue = [];\n\n          for (key in data['Time Series (15min)']) {\n            xValue.push(key);\n            yValue.push(data['Time Series (15min)'][key]['4. close']);\n          }\n\n          return _context.abrupt(\"return\", {\n            posts: xValue,\n            price: yValue\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/avigill/Desktop/Work/pages/index.js"],"names":["React","useState","axios","Chart","Bar","Index","posts","price","count","setCount","datas","label","datasets","data","backgroundColor","map","post","maintainAspectRatio","getInitialProps","get","res","xValue","yValue","key","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;AAAA;;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACJN,QAAQ,CAAC,CAAD,CADJ;AAAA,MACtBO,KADsB;AAAA,MAChBC,QADgB;;AAE7B,MAAMC,KAAK,GAAG;AAACC,IAAAA,KAAK,EAAE,KAAR;AACAC,IAAAA,QAAQ,EAAE,CAAC;AAEPC,MAAAA,IAAI,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,EAAd,CAFE;AAGPC,MAAAA,eAAe,EAAE;AAHV,KAAD;AADV,GAAd;AAMA,SACI,4BACJ;AAAI,IAAA,OAAO,EAAG;AAAA,aAAML,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,KAA1C,CADI,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,KAAK,CAACS,GAAN,CAAU,UAAAC,IAAI;AAAA,WACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADW;AAAA,GAAd,CAAP,CAFF,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOT,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADa;AAAA,GAAd,CAAP,CANJ,EAUI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEN,KAAX;AAAkB,IAAA,OAAO,EAAE;AACvBO,MAAAA,mBAAmB,EAAC;AADG,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAgBH,CAxBD;;GAAMZ,K;;KAAAA,K;AAyBNA,KAAK,CAACa,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRhB,KAAK,CAACiB,GAAN,CAAU,mHAAV,CADQ;;AAAA;AACpBC,UAAAA,GADoB;AAExB;AACMP,UAAAA,IAHkB,GAGXO,GAAG,CAACP,IAHO;AAIpBQ,UAAAA,MAJoB,GAIZ,EAJY;AAKpBC,UAAAA,MALoB,GAKZ,EALY;;AAMxB,eAAQC,GAAR,IAAeV,IAAI,CAAC,qBAAD,CAAnB,EAA2C;AACvCQ,YAAAA,MAAM,CAACG,IAAP,CAAYD,GAAZ;AACAD,YAAAA,MAAM,CAACE,IAAP,CAAYX,IAAI,CAAC,qBAAD,CAAJ,CAA4BU,GAA5B,EAAiC,UAAjC,CAAZ;AACH;;AATuB,2CAWjB;AAACjB,YAAAA,KAAK,EAAEe,MAAR;AAAgBd,YAAAA,KAAK,EAAEe;AAAvB,WAXiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAaA,eAAejB,KAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Chart from 'chart.js';\r\nimport {Bar} from 'react-chartjs-2';\r\nconst Index = ({posts,price}) => {\r\n    const [count,setCount] = useState(0);\r\n    const datas = {label: 'IBM',\r\n                  datasets: [{\r\n                      \r\n                      data:[12,22,333,22,22],\r\n                      backgroundColor: 'rgba(12,3232,23,0.9)'\r\n                  }]  };\r\n    return (\r\n        <>\r\n    <h1 onClick= {() => setCount(count + 1)}>{count}</h1>\r\n          <ul>  {posts.map(post =>\r\n                    <li>{post}</li>\r\n                )}\r\n            </ul>\r\n            <ul>  {price.map(post =>\r\n                    <li>{post}</li>\r\n                )}\r\n            </ul>\r\n            <Bar data={datas} options={{\r\n                maintainAspectRatio:false\r\n            }}/>\r\n        </>\r\n    )\r\n}\r\nIndex.getInitialProps = async () => {\r\nlet res = await axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=15min&apikey=V6PMYFQGMDIY3Y1P\");\r\n//console.log(res);\r\nconst data = res.data\r\nlet xValue =[];\r\nlet yValue =[];\r\nfor(let key in data['Time Series (15min)']){\r\n    xValue.push(key);\r\n    yValue.push(data['Time Series (15min)'][key]['4. close']);\r\n}\r\n\r\nreturn {posts: xValue, price: yValue};\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}