{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avi\\\\Downloads\\\\Work\\\\stocky\\\\Stock-Portfolio\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport Chart from \"../components/Chart\";\nimport Link from \"next/link\";\n\nconst Index = ({\n  posts,\n  price\n}) => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n\n  const createData = () => {\n    let arr = [];\n\n    for (let i = 0; i < posts.length; i++) {\n      let uiui = {\n        x: posts[i],\n        y: price[i]\n      };\n      arr.push(uiui);\n    }\n\n    return arr;\n  };\n\n  let datas = [{\n    id: \"IBM\",\n    data: createData()\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, count), __jsx(Link, {\n    href: `/stock?ticker=ACB`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Welp\")));\n};\n\nIndex.getInitialProps = async () => {\n  let res = await axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=ACB&interval=15min&apikey=V6PMYFQGMDIY3Y1P\"); //console.log(res);\n\n  const data = res.data;\n  let xValue = [];\n  let yValue = [];\n\n  for (let key in data[\"Time Series (15min)\"]) {\n    xValue.push(key);\n    yValue.push(data[\"Time Series (15min)\"][key][\"4. close\"]);\n  }\n\n  return {\n    posts: xValue,\n    price: yValue\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Avi/Downloads/Work/stocky/Stock-Portfolio/pages/index.js"],"names":["React","useState","axios","ResponsiveLine","Chart","Link","Index","posts","price","count","setCount","createData","arr","i","length","uiui","x","y","push","datas","id","data","getInitialProps","res","get","xValue","yValue","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAClC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,IAAI,GAAG;AAAEC,QAAAA,CAAC,EAAET,KAAK,CAACM,CAAD,CAAV;AAAeI,QAAAA,CAAC,EAAET,KAAK,CAACK,CAAD;AAAvB,OAAX;AACAD,MAAAA,GAAG,CAACM,IAAJ,CAASH,IAAT;AACD;;AACD,WAAOH,GAAP;AACD,GAPD;;AAQA,MAAIO,KAAK,GAAG,CACV;AACEC,IAAAA,EAAE,EAAE,KADN;AAEEC,IAAAA,IAAI,EAAEV,UAAU;AAFlB,GADU,CAAZ;AAMA,SACE,4BACE;AAAI,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,KAAzC,CADF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,CADF;AASD,CAzBD;;AA0BAH,KAAK,CAACgB,eAAN,GAAwB,YAAY;AAClC,MAAIC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CACd,mHADc,CAAhB,CADkC,CAIlC;;AACA,QAAMH,IAAI,GAAGE,GAAG,CAACF,IAAjB;AACA,MAAII,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,GAAT,IAAgBN,IAAI,CAAC,qBAAD,CAApB,EAA6C;AAC3CI,IAAAA,MAAM,CAACP,IAAP,CAAYS,GAAZ;AACAD,IAAAA,MAAM,CAACR,IAAP,CAAYG,IAAI,CAAC,qBAAD,CAAJ,CAA4BM,GAA5B,EAAiC,UAAjC,CAAZ;AACD;;AAED,SAAO;AAAEpB,IAAAA,KAAK,EAAEkB,MAAT;AAAiBjB,IAAAA,KAAK,EAAEkB;AAAxB,GAAP;AACD,CAdD;;AAeA,eAAepB,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport Chart from \"../components/Chart\";\nimport Link from \"next/link\";\n\nconst Index = ({ posts, price }) => {\n  const [count, setCount] = useState(0);\n  const createData = () => {\n    let arr = [];\n    for (let i = 0; i < posts.length; i++) {\n      let uiui = { x: posts[i], y: price[i] };\n      arr.push(uiui);\n    }\n    return arr;\n  };\n  let datas = [\n    {\n      id: \"IBM\",\n      data: createData(),\n    },\n  ];\n  return (\n    <>\n      <h1 onClick={() => setCount(count + 1)}>{count}</h1>\n\n      <Link href={`/stock?ticker=ACB`}>\n        <a>Welp</a>\n      </Link>\n    </>\n  );\n};\nIndex.getInitialProps = async () => {\n  let res = await axios.get(\n    \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=ACB&interval=15min&apikey=V6PMYFQGMDIY3Y1P\"\n  );\n  //console.log(res);\n  const data = res.data;\n  let xValue = [];\n  let yValue = [];\n  for (let key in data[\"Time Series (15min)\"]) {\n    xValue.push(key);\n    yValue.push(data[\"Time Series (15min)\"][key][\"4. close\"]);\n  }\n\n  return { posts: xValue, price: yValue };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}